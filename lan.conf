# lan.conf
# A configuration file for lanserv or ipmi_sim to configure the various
# communication parameters for the device.

# This is a name used to identify this instance, and used to create
# the default name of the emulator startup command file and eventually
# the storage facility for permanent storage.
name "ipmi0"

#
# Work on the BMC first
set_working_mc 0x20

  # Define a LAN channel on channel 1
  startlan 1
    # Define an IP address and port to listen on.  You can define more
    # than one address/port to listen on multiple addresses.  The ::
    # listens on all addresses.
    addr 0.0.0.0 623
    #addr 192.168.27.126 9000
    #addr 192.168.27.200 9000

    # Maximum privilege limit on the channel.
    priv_limit admin

    # Allowed IPMI 1.5 authorization types
    allowed_auths_callback none md2 md5 straight
    allowed_auths_user none md2 md5 straight
    allowed_auths_operator none md2 md5 straight
    allowed_auths_admin none md2 md5 straight

    # guid for IPMI 2.0 authorization  You can also use a string
    # guid a123456789abcdefa123456789abcdef
    guid "incendia"

    # You can specify a BMC key for IPMI 2.0 authorization.  See the
    # spec for details.
    bmc_key "incendia"

    # A program to get and set the LAN configuration of the interface.
    #lan_config_program "/usr/local/bin/ipmi_sim_lancontrol eth0"
    lan_config_program "/etc/ipmi/ipmi_sim_lancontrol eth0"
  endlan

  # chassis_control "chassis/ipmi_premier_ch"
  chassis_control "/etc/ipmi/ipmi_sim_chassiscontrol"
  # Define a serial VM inteface for channel 15 (the system interface) on
  # port 9002, just available to the local system (localhost).
  #serial PS0 localhost 9002 codec VM

  # startcmd is what to execute to start a VM associated with the
  # codec above (localhost 9002).  It also starts a console serial port
  # on port 9003 that is also used as the monitor interface.
  #startcmd "./export_gpio ./set_gpio.elf ./init_temp.sh"

  #sol "telnet:192.168.101.203:9012" 115200

  # Start startcmd at startup?  Default is false.
  startnow false

  # The amount of time to wait for the startcmd to do a graceful shutdown
  # on a powerdown request.  The simulator will send a request to the
  # target, wait this amount of time, and then do a SIGTERM kill on the
  # process.  If this is zero, a SIGTERM will not be done (nor will a SIGKILL).
  # Note that if the simulator does not have a connection to the VM, the
  # graceful shutdown is skipped and a SIGTERM is done immediately.
  # Default time is 60 seconds.
  #poweroff_wait 30

  # The amount of time to wait for SIGTERM to kill the process.  If the process
  # does not terminate in this period of time, send a SIGKILL kill.  If this
  # is zero, don't send the SIGKILL.  Default time is 20 seconds.
  kill_wait 5

  # Now add some users.  User 0 is invalid, user 1 is the special "anonymous"
  # user and cannot take a username.  Note that the users here are only
  # used if the persistent user config doesn't exist.
  #    # valid name      passw      priv-lim max-sess allowed-auths
  user 1 true  ""        "user"     user     10       none md2 md5 straight
  user 2 true  "ADMIN"   "ADMIN"    admin    10       none md2 md5 straight

  sol "/dev/ttyPS0" 115200 history=4000,backupfile=/root/solhist1

#
# Switch to a new MC
#
set_working_mc 2

  # Add a SOL config, a device and a default baud rate.
  # "history" sets a history buffer size.  This means that DCD and CTS will
  # always be enabled to the device, and we will constantly collect
  # history for the device.  It will be available as SOL instance 2
  # on the device.  If the optional backupfile option is specified,
  # the history data is stored in the given file if the BMC shuts down
  # (or is killed by a catchable signal) and restored from that file if it
  # starts up.
  # If historyfru=N is specified, then FRU device N on the MC will be
  # able to fetch the contents of the history buffer, too, up to
  # 65535 bytes (the max size of FRU data).
  # Specifying nortscts disabled rtscts on the port.  It will still change
  # the RTS output line, but it won't listen to CTS.
  # Normally the data is left in the history buffer when read.  If
  # you want the history data to be cleared from the buffer on read
  # add readclear.
  #sol "/dev/ttyUSB0" 19200 nortscts readclear
#  sol "/dev/ttyUSB0" 38400 history=4000,backupfile=/var/ipmi_sim/solhist1 historyfru=10
#  sol "/dev/ttyGS0" 115200 history=4000,backupfile=/root/solhist2
  # Define a serial VM inteface for channel 15 (the system interface) on
  # port 9003 for the MC at 0x30
  #serial 15 localhost 9011 codec VM

  #startcmd "$HOME/git/qemu-kvm/x86_64-softmmu/qemu-system-x86_64 --enable-kvm -drive file=$HOME/KVM/Test4sda -nographic -net nic,model=e1000,macaddr=52:54:00:12:34:59 -net user,hostfwd=tcp::5556-10.0.2.15:22 -chardev socket,id=ipmi0,host=localhost,port=9011,reconnect=10 -device isa-ipmi,chardev=ipmi0,interface=bt,irq=5 -serial mon:tcp::9012,server,telnet,nowait"

  # Start startcmd at startup?  Default is false.
  #startnow false

# Allow a console connection to perform emulation commands.
#console localhost 9000

# Dynamically load a module to extend the simulator.  After the module is
# loaded, if the function "ipmi_sim_module_init" is defined in the module,
# it will be called with the following parameters:
#  int ipmi_sim_module_init(sys_data_t *sys, char *initstr);
# where initstr is the init string passed on the module load line.
# It should return 0 on success or an errno no failure.
loadlib "/etc/ipmi/prem_mod.so" ""
